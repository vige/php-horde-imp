Description: Adapt to PHPUnit 8.x and 9.x API.
Author: Mike Gabriel <mike.gabriel@das-netzwerkteam.de>

--- a/imp-6.2.27/test/Imp/Unit/ComposeTest.php
+++ b/imp-6.2.27/test/Imp/Unit/ComposeTest.php
@@ -23,7 +23,7 @@
  * @package    IMP
  * @subpackage UnitTests
  */
-class Imp_Unit_ComposeTest extends PHPUnit_Framework_TestCase
+class Imp_Unit_ComposeTest extends Horde_Test_Case
 {
     public function testBug10431()
     {
--- a/imp-6.2.27/test/Imp/Unit/MboxParseTest.php
+++ b/imp-6.2.27/test/Imp/Unit/MboxParseTest.php
@@ -23,7 +23,7 @@
  * @package    IMP
  * @subpackage UnitTests
  */
-class Imp_Unit_MboxParseTest extends PHPUnit_Framework_TestCase
+class Imp_Unit_MboxParseTest extends Horde_Test_Case
 {
     public function testMboxParse()
     {
@@ -41,8 +41,7 @@
                 $key
             );
 
-            $this->assertInternalType(
-                'array',
+            $this->assertIsArray(
                 $val
             );
 
@@ -64,8 +63,7 @@
 
         $val = $parse[0];
 
-        $this->assertInternalType(
-            'array',
+        $this->assertIsArray(
             $val
         );
 
@@ -75,11 +73,10 @@
         );
     }
 
-    /**
-     * @expectedException IMP_Exception
-     */
     public function testBadData()
     {
+        $this->expectException('IMP_Exception');
+
         new IMP_Mbox_Parse(__DIR__ . '/noexist');
     }
 
--- a/imp-6.2.27/test/Imp/Unit/Mime/Viewer/HtmlTest.php
+++ b/imp-6.2.27/test/Imp/Unit/Mime/Viewer/HtmlTest.php
@@ -23,13 +23,13 @@
  * @package    IMP
  * @subpackage UnitTests
  */
-class Imp_Unit_Mime_Viewer_HtmlTest extends PHPUnit_Framework_TestCase
+class Imp_Unit_Mime_Viewer_HtmlTest extends Horde_Test_Case
 {
-    public function setUp()
+    public function setUp(): void
     {
-        $GLOBALS['browser'] = $this->getMock('Horde_Browser');
+        $GLOBALS['browser'] = $this->getMockBuilder('Horde_Browser')->getMock();
 
-        $prefs = $this->getMock('Horde_Prefs', array(), array(), '', false);
+        $prefs = $this->getMockBuilder('Horde_Prefs')->disableOriginalConstructor()->getMock();
         $prefs->expects($this->any())
             ->method('getValue')
             ->will($this->returnValue(false));
@@ -52,7 +52,7 @@
         );
 
         $v = new IMP_Stub_Mime_Viewer_Html(new Horde_Mime_Part(), array(
-            'browser' => $this->getMock('Horde_Browser'),
+            'browser' => $this->getMockBuilder('Horde_Browser')->getMock(),
             'charset' => 'UTF-8'
         ));
 
@@ -79,7 +79,7 @@
         );
 
         $v = new IMP_Stub_Mime_Viewer_Html(new Horde_Mime_Part(), array(
-            'browser' => $this->getMock('Horde_Browser'),
+            'browser' => $this->getMockBuilder('Horde_Browser')->getMock(),
             'charset' => 'UTF-8'
         ));
 
--- a/imp-6.2.27/test/Imp/Unit/Mime/Viewer/ItipTest.php
+++ b/imp-6.2.27/test/Imp/Unit/Mime/Viewer/ItipTest.php
@@ -25,7 +25,7 @@
  * @subpackage UnitTests
  */
 class Imp_Unit_Mime_Viewer_ItipTest
-extends PHPUnit_Framework_TestCase
+extends Horde_Test_Case
 {
     private $_contents;
     private $_contentsCharset;
@@ -39,18 +39,18 @@
     private $_notifyStack = array();
     private $_oldtz;
 
-    public function setUp()
+    public function setUp(): void
     {
         $this->_oldtz = date_default_timezone_get();
         date_default_timezone_set('UTC');
 
-        $injector = $this->getMock('Horde_Injector', array(), array(), '', false);
+        $injector = $this->getMockBuilder('Horde_Injector')->disableOriginalConstructor()->getMock();
         $injector->expects($this->any())
             ->method('getInstance')
             ->will($this->returnCallback(array($this, '_injectorGetInstance')));
         $GLOBALS['injector'] = $injector;
 
-        $registry = $this->getMock('Horde_Registry', array(), array(), '', false);
+        $registry = $this->getMockBuilder('Horde_Registry')->setMethods(array('getCharset','remoteHost'))->disableOriginalConstructor()->getMock();
         $registry->expects($this->any())
             ->method('getCharset')
             ->will($this->returnValue('UTF-8'));
@@ -59,7 +59,7 @@
             ->will($this->returnValue((object)array('addr' => '1.2.3.4', 'host' => 'example.com', 'proxy' => false)));
         $GLOBALS['registry'] = $registry;
 
-        $notification = $this->getMock('Horde_Notification_Handler', array(), array(), '', false);
+        $notification = $this->getMockBuilder('Horde_Notification_Handler')->disableOriginalConstructor()->getMock();
         $notification->expects($this->any())
             ->method('push')
             ->will($this->returnCallback(array($this, '_notificationHandler')));
@@ -69,7 +69,7 @@
         $_SERVER['REMOTE_ADDR'] = 'localhost';
     }
 
-    public function tearDown()
+    public function tearDown(): void
     {
         date_default_timezone_set($this->_oldtz);
     }
@@ -85,7 +85,7 @@
 
         case 'IMP_Contents':
             if (!isset($this->_contents)) {
-                $contents= $this->getMock('IMP_Contents', array(), array(), '', false);
+                $contents= $this->getMockBuilder('IMP_Contents')->disableOriginalConstructor()->getMock();
                 $contents->expects($this->any())
                     ->method('getMIMEPart')
                     ->will($this->returnCallback(array($this, '_getMimePart')));
@@ -95,7 +95,7 @@
 
         case 'IMP_Factory_Contents':
             if (!isset($this->_contentsFactory)) {
-                $cf = $this->getMock('IMP_Factory_Contents', array(), array(), '', false);
+                $cf = $this->getMockBuilder('IMP_Factory_Contents')->disableOriginalConstructor()->getMock();
                 $cf->expects($this->any())
                     ->method('create')
                     ->will($this->returnValue($this->_injectorGetInstance('IMP_Contents')));
@@ -105,7 +105,7 @@
 
         case 'IMP_Factory_Imap':
             if (!isset($this->_imapFactory)) {
-                $imap = $this->getMock('IMP_Factory_Imap', array(), array(), '', false);
+                $imap = $this->getMockBuilder('IMP_Factory_Imap')->disableOriginalConstructor()->getMock();
                 $imap->expects($this->any())
                     ->method('create')
                     ->will($this->returnValue(new IMP_Stub_Imap()));
@@ -115,7 +115,7 @@
 
         case 'IMP_Factory_Mailbox':
             if (!isset($this->_mailbox)) {
-                $mbox = $this->getMock('IMP_Factory_Mailbox', array(), array(), '', false);
+                $mbox = $this->getMockBuilder('IMP_Factory_Mailbox')->disableOriginalConstructor()->getMock();
                 $mbox->expects($this->any())
                     ->method('create')
                     ->will($this->returnValue(new IMP_Mailbox('foo')));
@@ -125,7 +125,7 @@
 
         case 'IMP_Identity':
             if (!isset($this->_identity)) {
-                $identity = $this->getMock('Horde_Core_Prefs_Identity', array(), array(), '', false);
+                $identity = $this->getMockBuilder('Horde_Core_Prefs_Identity')->disableOriginalConstructor()->getMock();
                 $identity->expects($this->any())
                     ->method('setDefault')
                     ->will($this->returnCallback(array($this, '_identitySetDefault')));
@@ -232,7 +232,7 @@
     public function testAcceptingAnInvitationResultsInReplySent()
     {
         $this->_doImple('accept', $this->_getInvitation()->exportvCalendar());
-        $this->assertContains('Reply Sent.', reset($this->_notifyStack));
+        $this->assertStringContainsString('Reply Sent.', join(" ", reset($this->_notifyStack)));
     }
 
     /**
@@ -290,6 +290,8 @@
      */
     public function testResultMessageThrowsExceptionIfUidIsMissing()
     {
+        $this->expectNotToPerformAssertions();
+
         try {
             $this->_doImple('accept', "BEGIN:VEVENT\nORGANIZER:somebody@example.com\nDTSTAMP:20100816T143648Z\nDTSTART:20100816T143648Z\nEND:VEVENT");
             $this->fail('Expecting Exception.');
@@ -491,13 +493,13 @@
     public function testResultMimeMessageHeadersContainsReceivedHeader()
     {
         $this->_doImple('accept', $this->_getInvitation()->exportvCalendar());
-        $this->assertContains('(Horde Framework) with HTTP', $this->_getMailHeaders()->getValue('Received'));
+        $this->assertStringContainsString('(Horde Framework) with HTTP', $this->_getMailHeaders()->getValue('Received'));
     }
 
     public function testResultMimeMessageHeadersContainsMessageId()
     {
         $this->_doImple('accept', $this->_getInvitation()->exportvCalendar());
-        $this->assertContains('.Horde.', $this->_getMailHeaders()->getValue('Message-ID'));
+        $this->assertStringContainsString('.Horde.', $this->_getMailHeaders()->getValue('Message-ID'));
     }
 
     public function testResultMimeMessageHeadersContainsDate()
--- a/imp-6.2.27/test/Imp/Unit/QuotaTest.php
+++ b/imp-6.2.27/test/Imp/Unit/QuotaTest.php
@@ -23,7 +23,7 @@
  * @package    IMP
  * @subpackage UnitTests
  */
-class Imp_Unit_QuotaTest extends PHPUnit_Framework_TestCase
+class Imp_Unit_QuotaTest extends Horde_Test_Case
 {
     public function testMaildir()
     {
--- /dev/null
+++ b/imp-6.2.27/test/Imp/phpunit.xml
@@ -0,0 +1 @@
+<phpunit bootstrap="bootstrap.php"></phpunit>
